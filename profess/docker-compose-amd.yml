version: '3.2'
services:
  #mosquitto:
    #image: pascaldevink/rpi-mosquitto
    #container_name: "mosquito_S4G"
    #ports:
      #- "1883:1883"
  redis:
    image: redis:latest
    container_name: "redis_S4G"
    command: redis-server
    ports:
      - "6379:6379"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "10"
    restart: "always"
  ofw:
    image: garagon/optimization:amd
    container_name: "ofw"
    ports:
      - "8081:8080"
    depends_on:
      - redis
    volumes:
      - ./optimization-framework/prediction/resources:/usr/src/app/prediction/resources
      - ./optimization-framework/optimization/resources:/usr/src/app/optimization/resources
      - ./optimization-framework/utils/resources:/usr/src/app/utils/resources
      - ./optimization-framework/logs:/usr/src/app/logs
      - ./optimization-framework/utils/gurobi/license:/usr/src/app/share/gurobi811/license/gurobi.lic
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "10"
    command: ["python3", "-u", "ofw.py"]
    restart: "always"
  ml:
    image: garagon/optimization:amd_training
    container_name: "ml"
    depends_on:
      - redis
    volumes:
      - ./optimization-framework/prediction/resources:/usr/src/app/prediction/resources
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "10"
    command: ["python3", "-u", "mlTraining.py"]
    restart: "always"
  #mock:
    #image: garagon/optimization:mock
    #container_name: "mock"
    #command: ["python3", "-u", "mockdata.py", "SoC_Value"]

#volumes:
  #volume-glpsol:
  #volume-glpk:
