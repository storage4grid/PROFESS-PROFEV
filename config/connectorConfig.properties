[IO]
log.level = DEBUG
channel=MQTT
mqtt.port = 1883
pub.mqtt.host = 172.17.0.1
#pub.mqtt.host = mosquito_S4G
pub.topic.prefix = con/opt/
number.of.workers = 4
sub.mqtt.host = 172.17.0.1

#house prop should start with HOUSE
#remove w to make it work
[WHOUSE_price]
con.url = http://10.8.0.50:18081/46.12,11.12/prices
url.topic = price

[WHOUSE_20]
sub.mqtt.host = 172.17.0.1
con.topic = {"topic":"FRONIUS/data/InstallationHouse20","qos":0}
key.level = 1

[WHOUSE_BOLZANO]
sub.mqtt.host = 172.17.0.1
con.topic = {"topic":"FRONIUS/data/InstallationHouseBolzano","qos":0}
key.level = 1

[WHOUSE_SMX_1]
sub.mqtt.host = 10.8.0.31
con.topic = {"topic":"EDYNA-0003/Data","qos":0}
key.level = 2
key.separator = /

[WHOUSE_SMX_BROKER]
sub.mqtt.host = 10.8.0.50
con.topic = {"topic":"SMX/Data/v1.0/Datastreams(187)/Observations","qos":0,"mqtt.port":8883,"insecure":"True","ca_cert_path":"/usr/src/app/utils/resources/s4g-ca.crt"}
key.level = 1
key.separator = /
data.type = comma_equals


#Equations have the following components:
#Left hand side variable to which the output is to be assigned. It should be a single name
#Right hand side json.
#"eq" is the equation. variables consist of 2 parts. the section name and an output parameter of it. example HOUSE_SMX_1 is the section name and P is the parameter. they are combined by a dot, HOUSE_SMX_1.P
#equation can consist of any simple algebra (+,-,/,*,())
#min and max output range can be specified. if not then it would be infinite.
#data type of the output can be either float or int.

[EQUATIONS]
PV = {"eq":"(HOUSE_SMX_1.P + HOUSE_SMX_2.P)/1000", "min":0, "max":150, "dtype":"float"}

#these keys are the mapping from smx/fronius/any other input to desirable output
#the final output will be on topic pub.topic.prefix + section_name/parameter. example con/opt/WHOUSE_SMX_1/P
#only keep the keys for which the output is desired, others can be removed and wont be published

[KEYS]
0-0-1-0-0-255/-2= SMM_Time
1-1-32-7-0-255/-2= U1
1-1-52-7-0-255/-2= U2
1-1-72-7-0-255/-2= U3
1-1-31-7-0-255/-2= I1
1-1-51-7-0-255/-2= I2
1-1-71-7-0-255/-2= I3
1-1-36-7-0-255/-2= P1
1-1-56-7-0-255/-2= P2
1-1-76-7-0-255/-2= P3
1-1-151-7-0-255/-2= Q1
1-1-171-7-0-255/-2= Q2
1-1-191-7-0-255/-2= Q3
1-1-14-7-0-255/-2= f
1-1-16-7-0-255/-2= P
1-1-131-7-0-255/-2= Q
1-1-1-8-0-255/-2= Ap
1-1-2-8-0-255/-2= Am
1-1-3-8-0-255/-2= Rp
1-1-4-8-0-255/-2= Rm
1-1-33-7-0-255/-2= K1
1-1-53-7-0-255/-2= K2
1-1-73-7-0-255/-2= K3
SOC = SoC_Value
P_PV = P_PV
P_Load = P_Load
P_Grid = P_Grid
P_Akku = P_Akku
K3 = K3
U3 = U3
Rp = Rp
Q = Q
Q3 = Q3
Processed_Q = Processed_Q
Q2 = Q2
f = f
I2 = I2
Processed_I3 = Processed_I3
I3 = I3
Processed_Q2 = Processed_Q2
Processed_P = Processed_P
K2 = K2
Processed_Q1 = Processed_Q1
P2 = P2
Processed_Q3 = Processed_Q3
P3 = P3
Processed_P2 = Processed_P2
P1 = P1
I1 = I1
Q1 = Q1
Processed_I1 = Processed_I1
Am = Am
U1 = U1
Processed_I2 = Processed_I2
NumPayloadsPub = NumPayloadsPub
Processed_P3 = Processed_P3
Rm = Rm
Ap = Ap
Processed_P1 = Processed_P1
P = P
U2 = U2
K1 = K1
Type = Type